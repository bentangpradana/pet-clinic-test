name: Terraform Apply
on:
  workflow_run:
    workflows: ["Terraform Plan"]
    types:
      - completed
env:
  PROJECT_ID: hijra-440311
  COMPUTE_ZONE: asia-south2
  
jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    if: github.event.conclusion == 'success'  # Hanya jalankan jika Terraform Plan berhasil
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.CREDENTIALS_JSON }}'

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Google Cloud
        run: |
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Compute Zone: ${{ env.COMPUTE_ZONE }}"
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud config set compute/zone ${{ env.COMPUTE_ZONE }}

      - name: Initialize Terraform
        run: |
          cd terraform  # Berpindah ke direktori terraform
          terraform init

      - name: Apply Terraform changes
        run: |
          cd terraform  # Berpindah ke direktori terraform
          terraform apply -auto-approve  # Hapus ini jika ingin memicu secara manual

  ansible_deploy:
    runs-on: ubuntu-latest
    needs: terraform_apply
    if: github.event_name == 'workflow_dispatch'  # Hanya jalankan pada trigger manual
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.CREDENTIALS_JSON }}' 

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure Ansible inventory
        run: |
          echo "[my_servers]" > inventory.ini
          echo "${{ steps.terraform.outputs.instance_ip }}" >> inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini install_docker.yml
name: Terraform Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger for apply job

env:
  PROJECT_ID: hijra-440311
  COMPUTE_ZONE: asia-south2-a
  
jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Terraform
        run: |
            echo "Service Account Key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}"
            echo "Project ID: ${{ env.PROJECT_ID }}"
            echo "Compute Zone: ${{ env.COMPUTE_ZONE }}"
            echo ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }} > key.json
            gcloud auth activate-service-account --key-file=key.json
            gcloud config set project ${{ env.PROJECT_ID }}
            gcloud config set compute/zone ${{ env.COMPUTE_ZONE }}
            rm -f key.json

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Plan Terraform deployment
        run: terraform plan -out=tfplan -lock=false

      - name: Save Terraform plan output
        run: |
          terraform show -json tfplan > plan.json
        id: save_plan

  terraform_apply:
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Terraform
        run: |
          echo ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }} > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud config set compute/zone ${{ env.COMPUTE_ZONE }}
          rm -f key.json

      - name: Apply Terraform changes
        run: terraform apply tfplan -auto-approve

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configure Ansible inventory
        run: |
          echo "[my_servers]" > inventory.ini
          echo "${{ steps.terraform.outputs.instance_ip }}" >> inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini install_docker.yml
